{"version":3,"sources":["components/UsersList.jsx","components/MessagesList.jsx","components/SendMessageForm.jsx","components/ErrorMessage.jsx","components/Login.jsx","components/NavigationBar.jsx","App.jsx","services.js","serviceWorker.js","index.js"],"names":["UsersList","userInfo","this","props","users","map","user","react_default","a","createElement","key","className","Component","MessagesList","_this","messageInfo","messages","message","index","concat","loginUser","sender","timestamp","text","SendMessageForm","type","name","value","placeholder","onChange","onUpdateMessage","inputText","autonfocus","disabled","onClick","onSubmit","ErrorMessage","errMsg","Login","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","username","handleChange","bind","assertThisInitialized","event","setState","target","_this2","e","onLogin","NavigationBar","onLogout","App","errorMessage","isLoginPage","changeMessage","handleSubmit","handleLogin","handleLogout","timer","setInterval","fetch","method","then","response","ok","json","Promise","reject","error","err","statusText","data","catch","clearInterval","_this3","headers","content-type","body","JSON","stringify","_this4","loginuser","getUserLogin","_this5","components_Login","components_NavigationBar","components_UsersList","components_MessagesList","components_SendMessageForm","components_ErrorMessage","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.9927d03d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass UsersList extends Component {\r\n  render() {\r\n    const userInfo = this.props.users.map((user) => \r\n      <li key={user} >\r\n        <div className=\"user\">\r\n          <span className=\"username\">{user}</span>\r\n        </div>\r\n      </li>\r\n    );\r\n    return(\r\n      <ul className=\"user-list\">\r\n        {userInfo}\r\n      </ul>\r\n    );\r\n  }\r\n};\r\n\r\nexport default UsersList;","import React, {Component} from \"react\";\r\n\r\nclass MessagesList extends Component {\r\n  render() {\r\n\r\n  \tconst messageInfo = this.props.messages.map((message, index) => \r\n      <li key={index} className={` ${this.props.loginUser===message.sender?'active':''}`}>\r\n        <div className=\"message\">\r\n          <div className=\"meta-info\">\r\n            <div className=\"sender-info\">\r\n              <span className=\"username\">{message.sender}</span>\r\n            </div>\r\n            <div className=\"message-info\">\r\n              <span className=\"timestamp\">{message.timestamp}</span>\r\n            </div>\r\n          </div>\r\n          <p className=\"message-text\">{message.text}</p>\r\n        </div>\r\n\t  </li>\r\n    );\r\n  \r\n\treturn (\r\n\t  <ul className=\"message-list\">\r\n\t    {messageInfo}\r\n\t  </ul>\r\n    );\r\n  }\r\n\r\n};\r\n\r\nexport default MessagesList;","import React, { Component }from \"react\";\r\n\r\nclass SendMessageForm extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"to-send-form\">\r\n        <input type=\"hidden\" name=\"username\" value={this.props.loginUser}/>\r\n        <input className=\"to-send\" name=\"text\" placeholder=\"Type your message\" onChange={this.props.onUpdateMessage} value={this.props.inputText} autonfocus=\"true\"/>\r\n        <button type=\"submit\" disabled={this.props.inputText===''} onClick={this.props.onSubmit}>Submit</button>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default SendMessageForm;","import React, { Component } from 'react';\r\n\r\nclass ErrorMessage extends Component {\r\n  render() {\r\n  \treturn(\r\n  \t  <div className=\"error\">\r\n  \t    <p>{this.props.errMsg}</p>\r\n  \t  </div>\r\n  \t);\r\n  }\r\n};\r\n\r\nexport default ErrorMessage;","import React, { Component } from 'react';\r\n\r\nclass Login extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      username:''\r\n    };\r\n    this.handleChange = this.handleChange.bind(this);\r\n  }\r\n\r\n  handleChange(event){\r\n  \tthis.setState({username:event.target.value});\r\n  }\r\n\r\n  render(){\r\n  \treturn(\r\n      <div className=\"login-panel\">\r\n        <label>NAME</label>\r\n        <input type=\"text\" name=\"username\" placeholder=\"Please enter your name\" value={this.state.username} onChange={this.handleChange}/>\r\n        <button type=\"submit\" disabled={this.state.username===''} onClick={(e) => this.props.onLogin(this.state.username, e)}>Login</button>\r\n      </div>\r\n  \t)\r\n  }\r\n}\r\n\r\nexport default Login;","import React, { Component } from 'react';\r\n\r\nclass NavigationBar extends Component {\r\n  render() {\r\n  \treturn (\r\n  \t  <div className=\"navbar\">\r\n  \t  \t<span className=\"greeting\">Welcome, {this.props.loginUser}</span>\r\n  \t    <button type=\"submit\" className=\"logout\" onClick={this.props.onLogout} >Logout</button>\r\n  \t  </div>\r\n  \t)\r\n  }\r\n}\r\n\r\nexport default NavigationBar;","import React, { Component } from 'react';\nimport './App.css';\nimport UsersList from \"./components/UsersList\";\nimport MessagesList from \"./components/MessagesList\";\nimport SendMessageForm from \"./components/SendMessageForm\";\nimport ErrorMessage from \"./components/ErrorMessage\";\nimport Login from \"./components/Login\";\nimport NavigationBar from \"./components/NavigationBar\";\nimport {refresh, sendMessage, getUserLogin, getUserLogout} from \"./services\";\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      messages: [],\n      users: [],\n      inputText: '',\n      loginUser: '',\n      errorMessage: '',\n      isLoginPage: true\n    };\n  \n    this.changeMessage = this.changeMessage.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.handleLogout = this.handleLogout.bind(this);\n  }\n\n  componentDidMount() {\n    this.timer = setInterval(() =>{\n      refresh()\n      .then(data => {\n        this.setState({messages: data.messages, users: data.users, errorMessage: ''})\n      })\n      .catch(error => this.setState({errorMessage: error}))\n    }, 1000);\n  }\n\n  componentWillUnmount(){ \n    clearInterval(this.timer);\n  }\n\n  changeMessage(event) {\n    this.setState({inputText: event.target.value});\n  }\n\n  handleSubmit() {\n    sendMessage(this.state.loginUser, this.state.inputText)\n    .then(data => {\n      this.setState({messages: data.messages, inputText: '', errorMessage: ''})\n    })\n    .catch(error => this.setState({errorMessage: error}))\n  }\n\n  handleLogin(username) {\n    getUserLogin(username)\n    .then(data => {\n      this.setState({loginUser:username, isLoginPage:false, users:data.users, messages:data.messages, errorMessage: ''})\n    })\n    .catch(error => this.setState({errorMessage: error}))\n  }\n\n  handleLogout(){\n    getUserLogout(this.state.loginUser)\n    .then(data => {\n      this.setState({loginUser:'', isLoginPage:true, errorMessage: ''})\n    })\n    .catch(error => this.setState({errorMessage: error}))\n  }\n\n  render() {\n  \tif(this.state.isLoginPage){\n  \t  return(\n  \t    <div className=\"login-page\">\n          <Login onLogin={this.handleLogin} />\n        </div>\n  \t  )\n  \t}\n    return (\n      <div className=\"chat-app\">\n        <div className=\"chat-page\">\n          <NavigationBar loginUser={this.state.loginUser}  onLogout={this.handleLogout} />\n          <div className=\"display-panel\">\n            <UsersList users={this.state.users}/>\n            <MessagesList messages={this.state.messages} loginUser={this.state.loginUser}/>\n          </div>\n          <SendMessageForm inputText={this.state.inputText} onUpdateMessage={this.changeMessage} onSubmit={this.handleSubmit} />\n          <ErrorMessage errMsg={this.state.ErrorMessage} />\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default App;","export const refresh = () => {\r\n  return fetch('/chat', {\r\n      method: 'GET',\r\n    })\r\n    .then( response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject({error: 'service-error', err: response.statusText});\r\n    });\r\n};\r\n\r\nexport const sendMessage = (user, message) => {\r\n  return fetch('/chat', {\r\n      method: 'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body: JSON.stringify({sender:user, message:message})\r\n    })\r\n    .then( response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject({error: 'service-error', err: response.statusText});\r\n    });\r\n};\r\n\r\nexport const getUserLogin = (username) => {\r\n  return fetch(\"/login\", {\r\n      method:'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body:JSON.stringify({loginuser:username}),\r\n    })\r\n    .then( response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject({error: 'service-error', err: response.statusText});\r\n    });\r\n};\r\n\r\nexport const getUserLogout = (username) => {\r\n  return fetch(\"/logout\", {\r\n      method:'POST',\r\n      headers: {\r\n        'content-type': 'application/json'\r\n      },\r\n      body:JSON.stringify({loginuser:username}),\r\n    })\r\n    .then( response => {\r\n      if(response.ok) {\r\n        return response.json();\r\n      }\r\n      return Promise.reject({error: 'service-error', err: response.statusText});\r\n    });\r\n};\r\n\r\n\r\n\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}